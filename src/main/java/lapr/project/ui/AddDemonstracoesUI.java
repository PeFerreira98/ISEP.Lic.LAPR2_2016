/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr.project.ui;

import java.awt.Component;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import lapr.project.controller.CriarCandidaturaController;
import lapr.project.model.Demonstracao;

/**
 *
 * @author zero_
 */
public class AddDemonstracoesUI extends javax.swing.JFrame {

    private CriarCandidaturaController controller;

    /**
     * Creates new form DefinirFAEUI
     */
    public AddDemonstracoesUI(CriarCandidaturaController criarCandidaturaController) {
        this.controller = criarCandidaturaController;

        super.setTitle("Add Demonstrations");
        initComponents();
        inicializarLista();
        super.setAlwaysOnTop(true);
        super.setLocationRelativeTo(null);
        super.setVisible(true);
    }

    private void inicializarLista() {
        final List<Demonstracao> listaDemonstracoes = this.controller.getListaDemonstracoesExposicao();

        if (listaDemonstracoes.isEmpty()) {
            this.jDemoList.setModel(new DefaultListModel<>());
            JOptionPane.showMessageDialog(this, "Não existem demonstracoes nesta exposição");
        }

        DefaultListModel listModel = new DefaultListModel() {
            @Override
            public int getSize() {
                return listaDemonstracoes.size();
            }

            @Override
            public Object getElementAt(int i) {
                return listaDemonstracoes.get(i);
            }
        };

        this.jDemoList.setModel(listModel);
        this.jDemoList.setCellRenderer(new CellRenderer());
    }

    private class CellRenderer extends JLabel implements ListCellRenderer<Demonstracao> {

        public CellRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getListCellRendererComponent(JList<? extends Demonstracao> list, Demonstracao demonstracao, int index, boolean isSelected, boolean cellHasFocus) {
            setText(demonstracao.getDesignacao());

            if (isSelected) {
                setBackground(list.getSelectionBackground());
                setForeground(list.getSelectionForeground());
            } else {
                setBackground(list.getBackground());
                setForeground(list.getForeground());
            }

            return this;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        jDemoList = new javax.swing.JList<>();
        jOK = new javax.swing.JButton();
        jAddDemo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jDemoList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane.setViewportView(jDemoList);

        jOK.setText("OK");
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });

        jAddDemo.setText("Add Demonstração");
        jAddDemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddDemoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAddDemo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jAddDemo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jOK)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAddDemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddDemoActionPerformed
        Demonstracao demo = this.jDemoList.getSelectedValue();

        if (demo != null) {
            if (this.controller.addDemonstracao(demo)) {
                JOptionPane.showMessageDialog(AddDemonstracoesUI.this,
                        "Demonstraccao adicionada com sucesso", "Add Demonstrations", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(AddDemonstracoesUI.this,
                        "Esta Demonstracao já está inserida", "Add Demonstrations", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(AddDemonstracoesUI.this,
                    "Seleccione uma Demonstracao", "Add Demonstrations", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jAddDemoActionPerformed

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed
        super.dispose();
    }//GEN-LAST:event_jOKActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddDemo;
    private javax.swing.JList<Demonstracao> jDemoList;
    private javax.swing.JButton jOK;
    private javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables

}
