/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr.project.ui.organizador;

import java.awt.Component;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import lapr.project.model.submissions.Avaliacao;
import lapr.project.model.submissions.Candidatura;

/**
 *
 * @author Marcos
 */
public class VerAvaliacoesUI extends javax.swing.JFrame {

    /**
     * Creates new form OrganizadorUI
     */
    private Candidatura cand;

    public VerAvaliacoesUI(Candidatura c) {
        this.cand = c;

        super.setTitle("Avaliar candidatura");

        initComponents();
        inicializarLista();
        super.setLocationRelativeTo(null);
        super.setVisible(true);
    }

    private void inicializarLista() {
        final List<Avaliacao> lstAvaliacao = this.cand.getLstAvaliacoes();

        if (lstAvaliacao.isEmpty()) {
            this.jLstDecisoes.setModel(new DefaultListModel<>());
            JOptionPane.showMessageDialog(this, "Não existem decisões");
        }

        DefaultListModel listModel = new DefaultListModel() {
            @Override
            public int getSize() {
                return lstAvaliacao.size();
            }

            @Override
            public Object getElementAt(int i) {
                return lstAvaliacao.get(i);
            }
        };

        this.jLstDecisoes.setModel(listModel);
        this.jLstDecisoes.setCellRenderer(new CellRenderer());
    }

    private class CellRenderer extends JLabel implements ListCellRenderer<Avaliacao> {

        public CellRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getListCellRendererComponent(JList<? extends Avaliacao> list, Avaliacao avaliacao, int index, boolean isSelected, boolean cellHasFocus) {
            setText(avaliacao.getDecisao());

            if (isSelected) {
                setBackground(list.getSelectionBackground());
                setForeground(list.getSelectionForeground());
            } else {
                setBackground(list.getBackground());
                setForeground(list.getForeground());
            }

            return this;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnInfo = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        jLstDecisoes = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnInfo.setText("Ver justificação");
        btnInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoActionPerformed(evt);
            }
        });

        jLabel2.setText("Decisões");

        jLstDecisoes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane.setViewportView(jLstDecisoes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInfo)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoActionPerformed
        Avaliacao a = jLstDecisoes.getSelectedValue();
        if (a == null) {
            JOptionPane.showMessageDialog(VerAvaliacoesUI.this,
                    "Nenhuma decisão seleccionada", "Decisões", JOptionPane.ERROR_MESSAGE);
        } else {
                new JustificacaoCandidatura(a);
        }
    }//GEN-LAST:event_btnInfoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnInfo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<Avaliacao> jLstDecisoes;
    private javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables
}
